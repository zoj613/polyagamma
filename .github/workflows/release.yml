# adapted from: https://github.com/pypa/cibuildwheel/tree/main/examples
name: Release

on:
  release:
    types: [ published ]

  workflow_dispatch:

jobs:
  build_wheels_and_sdist:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-20.04, macOS-10.15, windows-2019 ]
        python-version: [ '3.8' ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Ensure openblas is installed on macOS for numpy
        if: matrix.os == 'macOS-10.15'
        run: |
          brew install openblas
          python3 -m pip install --upgrade pip setuptools wheel cibuildwheel==2.4.0
          OPENBLAS="$(brew --prefix openblas)" pip install -r requirements-dev.txt

      - name: Install Dependencies
        if: matrix.os != 'macOS-10.15'
        run: |
          python3 -m pip install --upgrade pip setuptools wheel cibuildwheel==2.4.0
          pip install -r requirements-dev.txt

      - name: Build wheels
        env:
          # skip pypy builds
          CIBW_SKIP: "cp36-* *-musllinux_x86_64"
          CIBW_ARCHS_LINUX: "auto64"
          CIBW_ARCHS_MACOS: "x86_64"
          CIBW_ARCHS_WINDOWS: "auto64"
          # ensure openblas is used in macOS when building numpy
          CIBW_BEFORE_ALL_MACOS: brew install openblas
          CIBW_ENVIRONMENT_MACOS: OPENBLAS="$(brew --prefix openblas)"
          CIBW_TEST_COMMAND: 'cd ~ && python -c "from polyagamma import random_polyagamma; print(random_polyagamma());"'
          # skip the wheel build test command for windows OS
          CIBW_TEST_SKIP: "*-win*"
          BUILD_WHEEL: true
        run: cibuildwheel --output-dir wheelhouse --config-file pyproject.toml

      - name: Build source distribution
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          python -m build --sdist
          mv dist/*.gz wheelhouse

      - name: Store the wheelhouse directory
        uses: actions/upload-artifact@v2
        with:
          name: wheels_and_sdist
          path: wheelhouse
          if-no-files-found: error


  upload_pypi:
    needs: [ build_wheels_and_sdist ]
    runs-on: ubuntu-20.04
    steps:
      - name: Pull built wheels and sdist
        uses: actions/download-artifact@v2
        with:
          name: wheels_and_sdist
          path: wheelhouse

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: wheelhouse
